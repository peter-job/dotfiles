{{/* boolean feature flags */}}
{{- $ephemeral := false -}}{{/* true if this machine is ephemeral, e.g. a cloud or VM instance */}}
{{- $work := false -}}{{/* true if this machine is a work machine */}}
{{- $headless := false -}}{{/* true if this machine does not have a screen and keyboard */}}
{{- $personal := false -}}{{/* true if this machine should have personal secrets */}}

{{- $osID := .chezmoi.os -}}
{{- if (and (eq .chezmoi.os "linux") (hasKey .chezmoi.osRelease "id")) -}}
{{-   $osID = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}

{{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}
{{- if or (env "CODESPACES") (env "REMOTE_CONTAINERS_IPC") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") -}}
{{-   $ephemeral = true -}}
{{-   $headless = true -}}
{{- end -}}

{{/* work around unreliable hostname on darwin */}}
{{- $hostname := .chezmoi.hostname -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $computerName := output "scutil" "--get" "ComputerName" | trim -}}
{{-   if eq $computerName "Peter's MacBook Pro" -}}
{{-     $hostname = "peters-macbook-pro" -}}
{{-   else -}}
{{-     $hostname = $computerName -}}
{{-   end -}}
{{- end -}}
{{- if not $ephemeral -}}
{{-   if eq $hostname "peters-macbook-pro" -}}
{{-     $personal = true -}}
{{-   else if eq $hostname "ubuntu" -}}
{{-     $headless = true -}}
{{-     $personal = true -}}
{{-   else if stdinIsATTY -}}
{{-     $headless = promptBoolOnce . "headless" "headless" -}}
{{-     $ephemeral = promptBoolOnce . "ephemeral" "ephemeral" -}}
{{-   else -}}
{{-     $ephemeral = true -}}
{{-     $headless = true -}}
{{-   end -}}
{{- end -}}

{{ $name := "Peter Job" }}
{{- $email := "ptjob@icloud.com" -}}
{{- if $work -}}
{{/* {{-   $email = "ptjob@mcdonalds.com" -}} */}}
{{- end -}}

[data]
    email = {{ $email | quote }}
    name = {{ $name | quote }}
    work = {{ $work }}
    personal = {{ $personal }}
    ephemeral = {{ $ephemeral }}
    headless = {{ $headless }}
    hostname = {{ $hostname | quote }}
    osid = {{ $osID | quote }}
    zshPlugins = [
        "zsh-syntax-highlighting",
        "zsh-autosuggestions",
        "zsh-completions"
    ]

[github]
    refreshPeriod = "12h"

[hooks.read-source-state.pre]
command = "{{ .chezmoi.workingTree }}/home/.chezmoihooks/ensure-pre-requisites.sh"
